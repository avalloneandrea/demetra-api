---
openapi: 3.0.3
info:
  title: Demetra API
  version: 1.3.0
tags:
- name: AlexaResource
  description: Operations about Alexa integration
- name: ListResource
  description: Operations about shopping lists
- name: PlanResource
  description: Operations about meal plans
- name: RecipeResource
  description: Operations about recipes
paths:
  /alexa/account:
    post:
      tags:
      - AlexaResource
      summary: Register an account for the application
      operationId: register
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                amazonId:
                  type: string
                alexaId:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /alexa/items:
    post:
      tags:
      - AlexaResource
      summary: Add items in the default shopping list given the recipes to make
      operationId: addItems
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                accountId:
                  type: string
                recipes:
                  type: array
                  items:
                    format: int64
                    type: integer
            encoding:
              recipes:
                style: form
                explode: true
      responses:
        "200":
          description: OK
  /list:
    get:
      tags:
      - ListResource
      summary: Build a shopping list given the recipes to make
      operationId: getList
      parameters:
      - name: recipes
        in: query
        description: Recipes to make
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeIngredient'
  /plan:
    get:
      tags:
      - PlanResource
      summary: Build a meal plan given the number of days to cover
      operationId: getPlan
      parameters:
      - name: days
        in: query
        description: Number of days to cover
        schema:
          format: int32
          default: 7
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /recipe:
    get:
      tags:
      - RecipeResource
      summary: List the available recipes
      operationId: list
      parameters:
      - name: query
        in: query
        description: Query to filter results
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
components:
  schemas:
    Account:
      type: object
      properties:
        amazonId:
          type: string
        alexaId:
          type: string
    Category:
      enum:
      - Cereals
      - Dairy
      - Eggs
      - GreenFruits
      - GreenVegetables
      - Legumes
      - Misc
      - OrangeFruits
      - OrangeVegetables
      - Potatoes
      - ProcessedMeat
      - PurpleFruits
      - PurpleVegetables
      - RedFruits
      - RedMeat
      - RedVegetables
      - Seafood
      - Seeds
      - Spices
      - WhiteFruits
      - WhiteMeat
      - WhiteVegetables
      type: string
    Ingredient:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        unit:
          $ref: '#/components/schemas/Unit'
    Recipe:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        reference:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeIngredient'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
    RecipeIngredient:
      type: object
      properties:
        id:
          format: int64
          type: integer
        ingredient:
          $ref: '#/components/schemas/Ingredient'
        quantity:
          format: int32
          type: integer
    Unit:
      enum:
      - d
      - g
      - qb
      - u
      type: string
